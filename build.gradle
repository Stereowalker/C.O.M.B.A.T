buildscript {
    repositories {
        maven { url = 'https://files.minecraftforge.net/maven' }
		maven { url = 'https://repo.spongepowered.org/maven' }
        mavenCentral()
    }
    dependencies {
        classpath group: 'net.minecraftforge.gradle', name: 'ForgeGradle', version: '5.1.+', changing: true
		classpath 'org.parchmentmc:librarian:1.+'
		classpath group: 'org.spongepowered', name: 'mixingradle', version: '0.7-SNAPSHOT'
    }
}
plugins {
  id "com.matthewprenger.cursegradle" version "1.4.0"
}
apply plugin: 'net.minecraftforge.gradle'
// Only edit below this line, the above code adds and enables the necessary things for Forge to be setup.
apply plugin: 'eclipse'
apply plugin: 'maven-publish'
apply plugin: 'org.parchmentmc.librarian.forgegradle'
apply plugin: 'org.spongepowered.mixin'

mixin {
    add sourceSets.main, modId+".refmap.json"
}

version = modMinecraftVersion + "-" +modVersion
group = modGroup // http://maven.apache.org/guides/mini/guide-naming-conventions.html
archivesBaseName = modFilename

java.toolchain.languageVersion = JavaLanguageVersion.of(16)

println('Java: ' + System.getProperty('java.version') + ' JVM: ' + System.getProperty('java.vm.version') + '(' + System.getProperty('java.vendor') + ') Arch: ' + System.getProperty('os.arch'))
println('Mod Name: ' + modFilename + ', Mod Version: ' + modVersion + ', Minecraft Version: ' + modMinecraftVersion + ', Forge Version: ' + modForgeVersion)

repositories {
	maven {url = "https://dvs1.progwml6.com/files/maven/"} // location of the maven that hosts JEI files
	maven {url = "https://modmaven.k-4u.nl"} // location of a maven mirror for JEI files, as a fallback
	maven {url = "https://maven.theillusivec4.top/"}
	maven {url 'https://maven.blamejared.com'}
	maven { url "https://modmaven.dev/" }
	maven {url "https://www.cursemaven.com"} //cursemaven
    maven {url = "https://repo.spongepowered.org/maven"} // mixin
    maven {url "https://maven.shedaniel.me/"} // cloth config
}

minecraft {
    mappings channel: mappingsChannel, version: mappingsVersion
    //makeObfSourceJar = false // an Srg named sources jar is made by default. uncomment this to disable.
    accessTransformer = file('src/main/resources/META-INF/accesstransformer.cfg')
    runs {
        client {
            workingDirectory project.file('run/client')

            property 'forge.logging.markers', 'REGISTRIES'
			arg "-mixin.config="+modId+".mixins.json"

            // Recommended logging level for the console
            property 'forge.logging.console.level', 'debug'
            property 'mixin.env.remapRefMap', 'true'
			property 'mixin.env.refMapRemappingFile', "${buildDir}/createSrgToMcp/output.srg"
			
			args '--username', 'CodeHexIO', '--uuid', 'c5751ce1d50e4d47ca120e1ea1c75542'

            mods {
                modId {
                    source sourceSets.main
                }
            }
        }

        server {
            workingDirectory project.file('run/server')
            property 'forge.logging.markers', 'REGISTRIES'
			arg "-mixin.config="+modId+".mixins.json"
            // Recommended logging level for the console
            property 'forge.logging.console.level', 'debug'
            property 'mixin.env.remapRefMap', 'true'
			property 'mixin.env.refMapRemappingFile', "${buildDir}/createSrgToMcp/output.srg"
            mods {
                modId {
                    source sourceSets.main
                }
            }
        }
    }
}

dependencies {
	minecraft 'net.minecraftforge:forge:' + modMinecraftVersion + '-' + modForgeVersion
	annotationProcessor 'org.spongepowered:mixin:0.8.4:processor'
	implementation 'org.spongepowered:mixin:0.8.4'
	implementation fileTree(include: ['*.jar'], dir: 'libs')
	implementation fg.deobf("me.shedaniel.cloth:cloth-config-forge:"+clothConfigVersion)

	compileOnly fg.deobf("mezz.jei:jei-"+modMinecraftVersion+":"+jeiVersion+":api")
	compileOnly fg.deobf("top.theillusivec4.curios:curios-forge:"+modMinecraftVersion+"-"+curiosVersion+":api")
	compileOnly fg.deobf("vazkii.patchouli:Patchouli:"+modMinecraftVersion+"-"+patchouliVersion+":api")
    compileOnly fg.deobf("top.theillusivec4.caelus:caelus-forge:"+modMinecraftVersion+"-"+caelusVersion+"") 

	runtimeOnly fg.deobf("mezz.jei:jei-"+modMinecraftVersion+":"+jeiVersion+"")
	runtimeOnly fg.deobf("top.theillusivec4.curios:curios-forge:"+modMinecraftVersion+"-"+curiosVersion+"")
    runtimeOnly fg.deobf("vazkii.patchouli:Patchouli:"+modMinecraftVersion+"-"+patchouliVersion+"")
    
    runtimeOnly fg.deobf("top.theillusivec4.caelus:caelus-forge:"+modMinecraftVersion+"-"+caelusVersion+"") 
	
	
	implementation fg.deobf("curse.maven:unionlib-367806:"+unionLibID)
	implementation fg.deobf("curse.maven:biomes-o-plenty-220318:"+bopID)
	//implementation fg.deobf("curse.maven:survive-367337:"+surviveID)
	implementation fg.deobf("curse.maven:origins-474438:"+originsID)
	implementation fg.deobf("curse.maven:architectury-419699:"+architecturyID)

}

// Example for how to get properties into the manifest for reading by the runtime..
jar {
    manifest {
        attributes([
            "Specification-Title": modFilename,
            "Specification-Vendor": "Stereowalker",
            "Specification-Version": "1", // We are version 1 of ourselves
            "Implementation-Title": project.name,
            "Implementation-Version": "${version}",
            "Implementation-Vendor" :"Stereowalker",
            "MixinConfigs": modId+".mixins.json",
            "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ")
        ])
    }
}

curseforge {
    project {
    	id = modCurseId
		apiKey = "$System.env.CURSEFORGEKEY"
		changelog = file('changelog.md')
		releaseType = 'release'
		addGameVersion(modMinecraftVersion)
        addGameVersion("Forge")
		mainArtifact(jar) {
			displayName = modFilename+"-$project.version"
		}
	}		
}

task sourcesJar(type: Jar) {
    classifier = 'sources'
    from sourceSets.main.allJava
}

task deobfJar(type: Jar) {
	from sourceSets.main.output
	classifier = "deobf"
}

task apiJar(type: Jar) {
    from(sourceSets.main.allJava) {
        include 'com/stereowalker/combat/api/**'
		include 'com/stereowalker/rankup/api/**'
		include 'com/stereowalker/rankup/skills/api/**'
    }
    from (sourceSets.main.output) {
        include 'com/stereowalker/combat/api/**'
		include 'com/stereowalker/rankup/api/**'
		include 'com/stereowalker/rankup/skills/api/**'
    }
	classifier = 'api'
}

// Example configuration to allow publishing using the maven-publish task
// we define a custom artifact that is sourced from the reobfJar output task
// and then declare that to be published
// Note you'll need to add a repository here
//def reobfFile = file("$buildDir/reobfJar/output.jar")
//def reobfArtifact = artifacts.add('default', reobfFile) {
//    type 'jar'
//    builtBy 'reobfJar'
//}
publishing {
    publications {
        mavenJava(MavenPublication) {
            artifact jar
			artifact sourcesJar
			artifact deobfJar
			artifact apiJar
        }
    }
    repositories {
        maven {
            url "file:///${project.projectDir}/mcmodsrepo"
        }
    }
}

artifacts {
	archives sourcesJar
	archives deobfJar
	archives apiJar
}